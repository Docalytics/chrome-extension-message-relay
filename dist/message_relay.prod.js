/* Version 1.1.0 chrome-extension-message-relay (https://github.com/ecaroth/chrome-extension-message-relay), Authored by Evan Carothers */

(()=>{"use strict";const n=function(n,e,t){function i(n,e){"string"==typeof n&&(n=[n]),n.forEach((n=>{let t=o(n);t.type in T||(T[t.type]=[]),T[t.type].push({fn:e,ns:t.namespace})}))}function s(n){"string"==typeof n&&(n=[n]),n.forEach((n=>{let e=o(n);e.type in T&&(e.namespace?f(e.type,e.namespace):delete T[e.type])}))}function o(n){let e=n.split(".");return{type:e.splice(0,1)[0],namespace:e.length>0?e.join("."):null}}function f(n,e){if(n in T)for(let t=T[n].length-1;t>=0;t--)T[n][t].ns===e&&T[n].splice(t,1)}function a(n){if(n)for(let e in T)f(e,n);else T={}}function c(n,e,t,i){i||(i={});let s="msg_id"in i?i.msg_id:`${e}:${n}:${(new Date).getTime()}`;i.msg_id=s;let o={msg_type:n,msg_from:M,msg_destination:e,msg_up:t,msg_namespace:I,msg_data:i,msg_id:s,msg_tab_id:null},f=y(e);return f.tab_id&&(o.msg_destination=f.level,o.msg_tab_id=f.tab_id),o}function r(n,e,t,i){"string"==typeof e&&(e=[e]),e.forEach((e=>{if(!_(e))return b(`NOTICE - invalid level specified as destination (${e})`);let s=y(e).level;v[s]<v[M]?m(n,e,t,i):u(n,e,t,i)}))}function m(n,e,t,i){let s=c(n,e,!1,t);b(`Send msg DOWN from ${M} to ${e} : ${n} - ${JSON.stringify(t)}`),l(s,i)}function u(n,e,t,i){let s=c(n,e,!0,t);b(`Send msg UP from ${M} to ${e} : ${n} - ${JSON.stringify(t)}`),l(s,i)}function g(n,e,t){if(n===S.extension&&v[e.msg_destination]<v.extension)chrome.tabs.query({},(n=>{n.forEach((n=>{e.msg_tab_id&&n.id!==e.msg_tab_id||chrome.tabs.sendMessage(n.id,e,(n=>{t&&t(n)}))}))}));else if(n===S.content&&e.msg_destination===S.extension||n===S.extension)chrome.runtime.sendMessage(e,(n=>{t&&"function"==typeof t&&t(n)}));else if(n===S.iframe||n===S.iframe_shim)window.parent.postMessage(e,"*");else if(n!==S.page&&n!==S.content||e.msg_destination!==S.iframe)window.postMessage(e,"*");else for(let i=document.getElementsByTagName("iframe"),s=0;s<i.length;s++)try{i[s].contentWindow.postMessage(e,"*")}catch(o){}}function l(n,e){g(M,n,e)}function d(n,e,t){let{msg_data,msg_from,msg_up,msg_destination,msg_type,msg_id}=JSON.parse(JSON.stringify(n));t&&(j=t),L=msg_type;let i=`${msg_id}:${msg_destination}`;return msg_from===M||i in N?!1:(msg_destination===M?(b(`Msg (${msg_type}) received from ${msg_from} to ${msg_destination} - ${JSON.stringify(msg_data)}`),N[i]=0,p(msg_type,msg_data,t,e)):(n.msg_from=M,msg_up&&v[M]>v[msg_from]?(l(n),b(`Msg (${msg_type}) relaying UP from ${msg_from} to ${msg_destination} - ${JSON.stringify(msg_data)}`)):!msg_up&&v[M]<v[msg_from]&&(l(n),b(`Msg (${msg_type}) relaying DOWN ${msg_from} to ${msg_destination} - ${JSON.stringify(msg_data)}`))),!0)}function p(n,e,t){n in T&&T[n].forEach((n=>{"function"==typeof t?n.fn.call(n,e,t):n.fn.call(n,e)}))}function _(n){if(!n)return!1;let e=y(n).level;return e in S}function y(n){let e=n.split("@");return{level:e[0],tab_id:e.length>0?parseInt(e[1],10):null}}function h(n,e){return`${n}@${e}`}function b(n){w&&console.log(`::MSG-RELAY (${M}):: ${n}`)}function x(n,e){let t=c(n,M,!0,e);t.msg_from="mock",d(t,null,{tabId:999})}function O(){const n=1,e=0;E=setInterval(function(){for(let t in N)N[t]===e?N[t]=n:delete N[t]},1e3*J)}let w=t||!1,S=Object.freeze({extension:"extension",content:"content",page:"page",iframe:"iframe",iframe_shim:"iframe_shim",test:"test"}),v=Object.freeze({extension:4,content:3,page:2,iframe_shim:1,iframe:0,test:-1}),M=e,N={},E=null,J=120,I=n,j=null,L=null,T={};if(O(),M!==S.test&&(-1!==[S.page,S.content,S.iframe,S.iframe_shim].indexOf(M)&&window.addEventListener("message",function(n){"object"==typeof n.data&&"msg_namespace"in n.data&&n.data.msg_namespace===I&&d(n.data)}),-1!==[S.content,S.extension].indexOf(M)))try{chrome.runtime.onMessage.addListener(function(n,e,t){d(n,t,e)})}catch(k){}return{levels:S,on:i,off:s,offAll:a,send:r,levelViaTabId:h,getLastMsgSenderInfo:()=>{return j},getLastMsgType:()=>{return L},mockSend:x}};"undefined"!=typeof module&&module.exports?module.exports=n:window.chrome_extension_message_relay=n})();